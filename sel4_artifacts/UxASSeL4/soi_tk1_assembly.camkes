/**************************************************************************
  Copyright (c) 2013-2016 Rockwell Collins and the University of
  Minnesota. Developed with the sponsorship of the Defense Advanced
  Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this data, including any software or models
  in source or binary form, as well as any drawings,
  specifications, and documentation (collectively "the Data"), to
  deal in the Data without restriction, including without
  limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Data, and to
  permit persons to whom the Data is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS, SPONSORS,
  DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE
  DATA.
 **************************************************************************/

/**************************************************************************

  ***AUTOGENERATED CODE: DO NOT MODIFY***

This file contains the main CAmkES assembly for the
AADL system instance rooted at soi_tk1.

 **************************************************************************/

import <std_connector.camkes>;

#include <autoconf.h>
#define TB_MONITOR_READ_ACCESS 111
#define TB_MONITOR_WRITE_ACCESS 222

import "components/dispatch_periodic/dispatch_periodic.camkes";
import <Timer.idl4>;
import <TimeServerTK1/TimeServer.camkes>;

import "components/Clock_Driver/Clock_Driver.camkes";
import "components/UART_Driver/UART_Driver.camkes";
import "components/tb_Monitors/tb_UART_Driver_in_uart_packet_Monitor/tb_UART_Driver_in_uart_packet_Monitor.camkes";

import "components/Asset_Waypoint_Manager/Asset_Waypoint_Manager.camkes";
import "components/tb_Monitors/tb_Asset_Waypoint_Manager_in_uart_packet_Monitor/tb_Asset_Waypoint_Manager_in_uart_packet_Monitor.camkes";

import "components/Waypoint_Manager/Waypoint_Manager.camkes";
import "components/tb_Monitors/tb_Waypoint_Manager_in_mission_Monitor/tb_Waypoint_Manager_in_mission_Monitor.camkes";
import "components/tb_Monitors/tb_Waypoint_Manager_in_waypoint_Monitor/tb_Waypoint_Manager_in_waypoint_Monitor.camkes";
import "components/tb_Monitors/tb_Waypoint_Manager_in_send_success_Monitor/tb_Waypoint_Manager_in_send_success_Monitor.camkes";

import "components/Virtual_Machine/Virtual_Machine.camkes";
import "components/tb_Monitors/tb_Virtual_Machine_in_waypoint_Monitor/tb_Virtual_Machine_in_waypoint_Monitor.camkes";




// 12/12 MWW modified for CaMKes-next
connector seL4RPCCallDataport {
    from Procedure template "seL4RPCCallDataport-from.template.c";
    to Procedure template "seL4RPCCallDataport-to.template.c";
}

assembly {
    composition {
        component dispatch_periodic dispatch_periodic_inst;

        component TimeServerTK1 time_server;
        // Component instances for all AADL-defined threads

        component Clock_Driver Clock_Driver_inst;
        component UART_Driver UART_Driver_inst;
        component Asset_Waypoint_Manager Asset_Waypoint_Manager_inst;
        component Waypoint_Manager Waypoint_Manager_inst;
        component Virtual_Machine Virtual_Machine_inst;



        // Port declarations for active threads

        component tb_UART_Driver_in_uart_packet_Monitor tb_uart_driver_in_uart_packet_monitor;

        connection seL4TimeServer tb_Asset_Waypoint_Manager_periodic_dispatcher_timer(from Asset_Waypoint_Manager_inst.tb_timer, to time_server.the_timer);
        connection seL4Notification tb_Asset_Waypoint_Manager_periodic_dispatcher_echo_int(from dispatch_periodic_inst.Asset_Waypoint_Manager_periodic_dispatcher, to Asset_Waypoint_Manager_inst.tb_timer_complete);

        component tb_Asset_Waypoint_Manager_in_uart_packet_Monitor tb_asset_waypoint_manager_in_uart_packet_monitor;

        connection seL4TimeServer tb_Waypoint_Manager_periodic_dispatcher_timer(from Waypoint_Manager_inst.tb_timer, to time_server.the_timer);
        connection seL4Notification tb_Waypoint_Manager_periodic_dispatcher_echo_int(from dispatch_periodic_inst.Waypoint_Manager_periodic_dispatcher, to Waypoint_Manager_inst.tb_timer_complete);

        component tb_Waypoint_Manager_in_mission_Monitor tb_waypoint_manager_in_mission_monitor;

        component tb_Waypoint_Manager_in_waypoint_Monitor tb_waypoint_manager_in_waypoint_monitor;

        component tb_Waypoint_Manager_in_send_success_Monitor tb_waypoint_manager_in_send_success_monitor;


        component tb_Virtual_Machine_in_waypoint_Monitor tb_virtual_machine_in_waypoint_monitor;




        // Port connections for active threads

        connection seL4RPCCall conn1 (from UART_Driver_inst.tb_out_uart_packet0, to tb_asset_waypoint_manager_in_uart_packet_monitor.mon);

        connection seL4RPCCall conn2 (from UART_Driver_inst.tb_in_uart_packet, to tb_uart_driver_in_uart_packet_monitor.mon);
        connection seL4Notification conn3 (from tb_uart_driver_in_uart_packet_monitor.monsig, to UART_Driver_inst.tb_in_uart_packet_notification);

        connection seL4RPCCall conn4 (from UART_Driver_inst.tb_out_send_success0, to tb_waypoint_manager_in_send_success_monitor.mon);


        connection seL4RPCCall conn5 (from Asset_Waypoint_Manager_inst.tb_out_waypoint0, to tb_waypoint_manager_in_waypoint_monitor.mon);
        connection seL4RPCCall conn6 (from Asset_Waypoint_Manager_inst.tb_out_waypoint1, to tb_waypoint_manager_in_waypoint_monitor.mon);

        connection seL4RPCCall conn7 (from Asset_Waypoint_Manager_inst.tb_in_uart_packet, to tb_asset_waypoint_manager_in_uart_packet_monitor.mon);
        connection seL4Notification conn8 (from tb_asset_waypoint_manager_in_uart_packet_monitor.monsig, to Asset_Waypoint_Manager_inst.tb_in_uart_packet_notification);


        connection seL4RPCCall conn9 (from Waypoint_Manager_inst.tb_in_mission, to tb_waypoint_manager_in_mission_monitor.mon);
        connection seL4Notification conn10 (from tb_waypoint_manager_in_mission_monitor.monsig, to Waypoint_Manager_inst.tb_in_mission_notification);

        connection seL4RPCCall conn11 (from Waypoint_Manager_inst.tb_in_waypoint, to tb_waypoint_manager_in_waypoint_monitor.mon);
        connection seL4Notification conn12 (from tb_waypoint_manager_in_waypoint_monitor.monsig, to Waypoint_Manager_inst.tb_in_waypoint_notification);

        connection seL4RPCCall conn13 (from Waypoint_Manager_inst.tb_in_send_success, to tb_waypoint_manager_in_send_success_monitor.mon);
        connection seL4Notification conn14 (from tb_waypoint_manager_in_send_success_monitor.monsig, to Waypoint_Manager_inst.tb_in_send_success_notification);

        connection seL4RPCCall conn15 (from Waypoint_Manager_inst.tb_out_uart_packet0, to tb_uart_driver_in_uart_packet_monitor.mon);

        connection seL4RPCCall conn16 (from Virtual_Machine_inst.tb_out_mission0, to tb_waypoint_manager_in_mission_monitor.mon);

        connection seL4RPCCall conn17 (from Virtual_Machine_inst.tb_in_waypoint, to tb_virtual_machine_in_waypoint_monitor.mon);
        connection seL4Notification conn18 (from tb_virtual_machine_in_waypoint_monitor.monsig, to Virtual_Machine_inst.tb_in_waypoint_notification);



        // Direct RPC connections

        connection seL4RPCCall conn19 (from UART_Driver_inst.clkcar, to Clock_Driver_inst.clkcar);

        connection seL4RPCCall conn20 (from Virtual_Machine_inst.clkcarfwd, to Clock_Driver_inst.clkcarfwd);
        connection seL4RPCCall conn21 (from Virtual_Machine_inst.uartfwd, to UART_Driver_inst.uartfwd);




        connection seL4TimeServer periodic_dispatch_timer(from dispatch_periodic_inst.timer, to time_server.the_timer);
        connection seL4GlobalAsynchCallback echo_int(from time_server.timer_notification, to dispatch_periodic_inst.timer_complete);
    }

    configuration {
        dispatch_periodic_inst.timer_attributes = 10;
        dispatch_periodic_inst.timer_global_endpoint = "periodic_dispatcher_timer";
        dispatch_periodic_inst.timer_complete_global_endpoint = "periodic_dispatcher_timer";
        dispatch_periodic_inst.priority = 201;



        // Component port configuration declarations

        UART_Driver_inst.tb_out_uart_packet0_attributes = TB_MONITOR_WRITE_ACCESS;

        tb_uart_driver_in_uart_packet_monitor.priority = 230;
        UART_Driver_inst.tb_in_uart_packet_attributes = TB_MONITOR_READ_ACCESS;

        UART_Driver_inst.tb_out_send_success0_attributes = TB_MONITOR_WRITE_ACCESS;


        Asset_Waypoint_Manager_inst.tb_out_waypoint0_attributes = TB_MONITOR_WRITE_ACCESS;
        Asset_Waypoint_Manager_inst.tb_out_waypoint1_attributes = TB_MONITOR_WRITE_ACCESS;

        tb_asset_waypoint_manager_in_uart_packet_monitor.priority = 230;
        Asset_Waypoint_Manager_inst.tb_in_uart_packet_attributes = TB_MONITOR_READ_ACCESS;


        tb_waypoint_manager_in_mission_monitor.priority = 230;
        Waypoint_Manager_inst.tb_in_mission_attributes = TB_MONITOR_READ_ACCESS;

        tb_waypoint_manager_in_waypoint_monitor.priority = 230;
        Waypoint_Manager_inst.tb_in_waypoint_attributes = TB_MONITOR_READ_ACCESS;

        tb_waypoint_manager_in_send_success_monitor.priority = 230;
        Waypoint_Manager_inst.tb_in_send_success_attributes = TB_MONITOR_READ_ACCESS;

        Waypoint_Manager_inst.tb_out_uart_packet0_attributes = TB_MONITOR_WRITE_ACCESS;

        Virtual_Machine_inst.tb_out_mission0_attributes = TB_MONITOR_WRITE_ACCESS;

        tb_virtual_machine_in_waypoint_monitor.priority = 230;
        Virtual_Machine_inst.tb_in_waypoint_attributes = TB_MONITOR_READ_ACCESS;



        Asset_Waypoint_Manager_inst.priority = 10;
        Waypoint_Manager_inst.priority = 150;

        Asset_Waypoint_Manager_inst._control_stack_size = 256;
        Waypoint_Manager_inst._control_stack_size = 1024;

        Asset_Waypoint_Manager_inst.tb_timer_attributes = 11;
        Asset_Waypoint_Manager_inst.tb_timer_global_endpoint = "Asset_Waypoint_Manager_tb_timer";
        Waypoint_Manager_inst.tb_timer_attributes = 12;
        Waypoint_Manager_inst.tb_timer_global_endpoint = "Waypoint_Manager_tb_timer";

        Virtual_Machine_inst.asid_pool = true;

        Virtual_Machine_inst.simple = true;
        Virtual_Machine_inst.cnode_size_bits = 23;
        Virtual_Machine_inst.simple_untyped24_pool = 10;

        Virtual_Machine_inst.base_prio = 100;

        Virtual_Machine_inst._priority = 101;
        Virtual_Machine_inst.sem_value = 0;
#ifdef CONFIG_PLAT_EXYNOS5410

        Virtual_Machine_inst.untyped_mmios = [
                    "0x10000000:12", // CHIP_ID
                    "0x10486000:12", // VCPU
                    "0x12c20000:12", // UART2
                    "0x10040000:12", // POWER0
                    "0x10041000:12", // POWER1
                    "0x10042000:12", // POWER2
                    "0x10043000:12", // POWER3
                    "0x10044000:12", // POWER4
                    "0x10050000:12", // SYSREG
                    "0x10030000:12", // CMU_COREX
                    "0x10038000:12", // CMU_MEM
                    "0x1001c000:12", // CMU_ISP
                    "0x10018000:12", // CMU_ACP
                    "0x12110000:12", // USB EHCI
                    "0x12130000:12", // USB CTRL
                    "0x12200000:12", // MSH0
                    "0x12220000:12", // MSH2
                    "0x40000000:29"]; // RAM
        Virtual_Machine_inst.mmios = ["0x10010000:0x1000:12", // CMU_CPU
                    "0x10020000:0x1000:12", // CMU_TOP
                    "0x13400000:0x1000:12", // GPIO_RIGHT
                    "0x10014000:0x1000:12"]; // CMU_CORE
        Virtual_Machine_inst.irqs =  [27, // VTCNT (arch timer)
                    85, // UART2
                    107, // SDMMC0
                    109, // SDMMC2
                    103]; // USB

  #endif


#ifdef CONFIG_PLAT_TK1

        Virtual_Machine_inst.untyped_mmios = [
                    "0x50046000:12", // Interrupt Controller Virtual CPU interface (Virtual Machine view)
                    "0x60004000:12", // Interrupt controller registers (ICTLR)
                    "0x700b0000:12", // SDMMC-1, SDMMC-2, SDMMC-3, SDMMC-4,
                    "0x7d000000:12", // USB
                    "0x7d004000:12", // USB2
                    "0x7d008000:12", // USB3
                    "0xb0000000:28", // Linux kernel memory regions
                    "0xc0000000:29", // Linux kernel memory regions
                    "0xe0000000:28", // Linux kernel memory regions
#ifndef CONFIG_TK1_DEVICE_FWD
                    "0x60006000:12", // Clock and Reset (CAR)
                    "0x70006000:12", // UARTA, UARTB, VFIR, UARTC, UARTD, HDMI_IOBIST, MIPI_IOBIST, LPDDR2_IOBIST, PCIE_X2_0_IOBIST, PCIE_X2_1_IOBIST, PCIE_X4_IOBIST, SATA_IOBIST
#endif
#ifdef CONFIG_TK1_INSECURE
                    "0x01000000:12", // PCIe Controller 0 config registers
                    "0x01001000:12", // PCIe Controller 1 config registers
                    "0x01003000:12", // PCIe Pads & AFI
                    "0x02000000:25", // Start of PCIE_A2 region
                    "0x04000000:26", // Start of PCIE_A2 region
                    "0x08000000:27", // Start of PCIE_A2 region
                    "0x13000000:20", // In PCIE_A3 region
                                   //  Note: In the address map this region is 8KB, but we only pass through 4KB
                    "0x50000000:17", // Graphics host registers
                    "0x50020000:16", // Graphics host registers
                    "0x50030000:14", // Graphics host registers
                    "0x54200000:18", // Display A
                    "0x54240000:18", // Display B
                    "0x60005000:12", // Timers (TMR)
                    "0x6000c000:12", // System Registers, AHB Arbitration + Gizmo Controller, AHB/APB Debug Bus, Secure Boot, STAT-MON, Activity Monitor
                    "0x6000d000:12", // GPIOS 1-8
                    "0x60020000:12", // APB-DMA
                    "0x70000000:12", // APB-MISC: pinmux@0x70000868
                    "0x7000c000:12", // I2C, TWC, DTV, I2C2, I2C3, OWR, I2C4
                    "0x7000d000:12", // I2C5, I2C6, SPI 2B-(1..6)
                    "0x7000e000:12", // RTC, KBC, PMC
                    "0x7000f000:12", // FUSE, KFUSE
                    "0x70110000:12", // DVFS
                    "0x7001b000:12", // EMC
                    "0x70020000:12", // SATA
                    "0x70021000:12", // SATA
                    "0x70027000:12", // SATA
                    "0x70030000:12", // HDA
                    "0x70031000:12", // HDA
                    "0x70038000:12", // HDA
                    "0x7009f000:12", // XUSB_PADCTL TODO: Look into pads
                    "0x70300000:12", // Audio Cluster
                    "0x70301000:12", // Audio Cluster
  #endif
                    ];
        Virtual_Machine_inst.irqs =  [27, // INTERRUPT_VGPT (INTERRUPT_PPI_11)
                    53, // INTERRUPT_USB2
                    63, // INTERRUPT_SDMMC4
                    122, // INTERRUPT_UARTD
                    129, // INTERRUPT_USB3
  #ifdef CONFIG_TK1_INSECURE
                    32, // INTERRUPT_TMR1
                    33, // INTERRUPT_TMR2
                    34, // INTERRUPT_RTC
                    35, // INTERRUPT_CEC
                    36, // INTERRUPT_SHR_SEM_INBOX_FULL
                    37, // INTERRUPT_SHR_SEM_INBOX_EMPTY
                    38, // INTERRUPT_SHR_SEM_OUTBOX_FULL
                    39, // INTERRUPT_SHR_SEM_OUTBOX_EMPTY
                    40, // INTERRUPT_VDE_UCQ
                    41, // INTERRUPT_VDE_SYNC_TOKEN
                    42, // INTERRUPT_VDE_BSEV
                    43, // INTERRUPT_VDE_BSEA
                    44, // INTERRUPT_VDE_SXE
                    45, // INTERRUPT_SATA_RX_STAT
                    46, // INTERRUPT_SDMMC1
                    47, // INTERRUPT_SDMMC2
                    49, // INTERRUPT_VDE
                    50, // INTERRUPT_AVP_UCQ
                    51, // INTERRUPT_SDMMC3
                    52, // INTERRUPT_USB
                    54, // INTERRUPT_USB2
                    55, // INTERRUPT_SATA_CTL
                    57, // INTERRUPT_VCP
                    58, // INTERRUPT_APB_DMA_CPU
                    59, // INTERRUPT_AHB_DMA_CPU
                    60, // INTERRUPT_ARB_SEM_GNT_COP
                    61, // INTERRUPT_ARB_SEM_GNT_CPU
                    62, // INTERRUPT_OWR
                    64, // INTERRUPT_GPIO1
                    65, // INTERRUPT_GPIO2
                    66, // INTERRUPT_GPIO3
                    67, // INTERRUPT_GPIO4
                    68, // INTERRUPT_UARTA
                    69, // INTERRUPT_UARTB
                    70, // INTERRUPT_I2C
                    71, // INTERRUPT_USB3_HOST
                    72, // INTERRUPT_USB3_HOST_SMI
                    73, // INTERRUPT_TMR3
                    74, // INTERRUPT_TMR4
                    75, // INTERRUPT_USB3_HOST_PME
                    76, // INTERRUPT_USB3_DEV_HOST
                    77, // INTERRUPT_ACTMON
                    78, // INTERRUPT_UARTC
                    79, // INTERRUPT_HSI
                    80, // INTERRUPT_THERMAL
                    81, // INTERRUPT_XUSB_PADCTL
                    82, // INTERRUPT_TSEC
                    83, // INTERRUPT_EDP
                    84, // INTERRUPT_VFIR
                    85, // INTERRUPT_I2C5
                    86, // INTERRUPT_STAT_MON
                    87, // INTERRUPT_GPIO5
                    88, // INTERRUPT_USB3_DEV_SMI
                    89, // INTERRUPT_USB3_DEV_PME
                    90, // INTERRUPT_SE
                    91, // INTERRUPT_SPI1
                    92, // INTERRUPT_APB_DMA_COP
                    93, // INTERRUPT_AHB_DMA_COP
                    94, // INTERRUPT_CLDVFS
                    95, // INTERRUPT_I2C6
                    96, // INTERRUPT_HOST1X_SYNCPT_COP
                    97, // INTERRUPT_HOST1X_SYNCPT_CPU
                    98, // INTERRUPT_HOST1X_GEN_COP
                    99, // INTERRUPT_HOST1X_GEN_CPU
                    100, // INTERRUPT_MSENC
                    101, // INTERRUPT_VI
                    102, // INTERRUPT_ISPB
                    103, // INTERRUPT_ISP
                    104, // INTERRUPT_VIC
                    105, // INTERRUPT_DISPLAY
                    106, // INTERRUPT_DISPLAYB
                    107, // INTERRUPT_HDMI
                    108, // INTERRUPT_SOR
                    110, // INTERRUPT_EMC
                    111, // INTERRUPT_SPI6
                    113, // INTERRUPT_HDA
                    114, // INTERRUPT_SPI2
                    115, // INTERRUPT_SPI3
                    116, // INTERRUPT_I2C2
                    118, // INTERRUPT_PMU_EXT
                    119, // INTERRUPT_GPIO6
                    121, // INTERRUPT_GPIO7
                    124, // INTERRUPT_I2C3
                    127, // INTERRUPT_SW
                    128, // INTERRUPT_SNOR
                    130, // INTERRUPT_PCIE_INT
                    131, // INTERRUPT_PCIE_MSI
                    132, // INTERRUPT_PCIE_WAKE
                    133, // INTERRUPT_AVP_CACHE
                    135, // INTERRUPT_AUDIO_CLUSTER
                    136, // INTERRUPT_APB_DMA_CH0
                    137, // INTERRUPT_APB_DMA_CH1
                    138, // INTERRUPT_APB_DMA_CH2
                    139, // INTERRUPT_APB_DMA_CH3
                    140, // INTERRUPT_APB_DMA_CH4
                    141, // INTERRUPT_APB_DMA_CH5
                    142, // INTERRUPT_APB_DMA_CH6
                    143, // INTERRUPT_APB_DMA_CH7
                    144, // INTERRUPT_APB_DMA_CH8
                    145, // INTERRUPT_APB_DMA_CH9
                    146, // INTERRUPT_APB_DMA_CH10
                    147, // INTERRUPT_APB_DMA_CH11
                    148, // INTERRUPT_APB_DMA_CH12
                    149, // INTERRUPT_APB_DMA_CH13
                    150, // INTERRUPT_APB_DMA_CH14
                    151, // INTERRUPT_APB_DMA_CH15
                    152, // INTERRUPT_I2C4
                    153, // INTERRUPT_TMR5
                    154, // INTERRUPT_HIER_GROUP1_COP
                    155, // INTERRUPT_WDT_CPU
                    156, // INTERRUPT_WDT_AVP
                    157, // INTERRUPT_GPIO8
                    158, // INTERRUPT_CAR
                    159, // INTERRUPT_HIER_GROUP1_CPU
                    160, // INTERRUPT_APB_DMA_CH16
                    161, // INTERRUPT_APB_DMA_CH17
                    162, // INTERRUPT_APB_DMA_CH18
                    163, // INTERRUPT_APB_DMA_CH19
                    164, // INTERRUPT_APB_DMA_CH20
                    165, // INTERRUPT_APB_DMA_CH21
                    166, // INTERRUPT_APB_DMA_CH22
                    167, // INTERRUPT_APB_DMA_CH23
                    168, // INTERRUPT_APB_DMA_CH24
                    169, // INTERRUPT_APB_DMA_CH25
                    170, // INTERRUPT_APB_DMA_CH26
                    171, // INTERRUPT_APB_DMA_CH27
                    172, // INTERRUPT_APB_DMA_CH28
                    173, // INTERRUPT_APB_DMA_CH29
                    174, // INTERRUPT_APB_DMA_CH30
                    175, // INTERRUPT_APB_DMA_CH31
                    176, // INTERRUPT_CPU0_PMU
                    177, // INTERRUPT_CPU1_PMU
                    178, // INTERRUPT_CPU2_PMU
                    179, // INTERRUPT_CPU3_PMU
                    180, // INTERRUPT_SDMMC1_SYS
                    181, // INTERRUPT_SDMMC2_SYS
                    182, // INTERRUPT_SDMMC3_SYS
                    183, // INTERRUPT_SDMMC4_SYS
                    184, // INTERRUPT_TMR6
                    185, // INTERRUPT_TMR7
                    186, // INTERRUPT_TMR8
                    187, // INTERRUPT_TMR9
                    188, // INTERRUPT_TMR0
                    189, // INTERRUPT_GPU
                    190, // INTERRUPT_GPU_NONSTALL
                    191  // ARDPAUX
  #endif
                    ];

        Virtual_Machine_inst.smmu = [10, 23];
  #endif
    }
}


