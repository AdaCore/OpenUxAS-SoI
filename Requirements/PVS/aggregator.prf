(aggregator
 (route_plan_request_message_TCC1 0
  (route_plan_request_message_TCC1-1 nil 3708946203
   ("" (expand "defined_vehicle_id?")
    (("" (typepred "defined_vehicle_id_set") (("" (propax) nil nil))
      nil))
    nil)
   ((defined_vehicle_id_set formal-const-decl
     "{s: set[nat] | member(0, s)}" aggregator nil)
    (member const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined_vehicle_id? const-decl "bool" aggregator nil))
   nil))
 (create_TCC1 0
  (create_TCC1-1 nil 3708946203
   ("" (grind)
    ((""
      (inst 1
       "LAMBDA(vset: valid_vehicle_id_set, rset: route_request_message_set, map: route_request_to_set_of_unique_route_plan_requests(rset)): emptyset")
      (("" (grind) nil nil)) nil))
    nil)
   nil nil))
 (generate_TCC1 0
  (generate_TCC1-1 nil 3708946203
   ("" (skeep 1 t)
    (("" (split)
      (("1" (expand "route_request_message_set?")
        (("1" (skeep 1)
          (("1" (inst -2 "rr1" "rr2")
            (("1" (assert) nil nil)
             ("2" (expand "route_request_message_in_set?")
              (("2" (typepred "rr2") (("2" (grind) nil nil)) nil)) nil)
             ("3" (expand "route_request_message_in_set?")
              (("3" (typepred "rr1") (("3" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "route_request_message_set?")
        (("2" (skeep 2 t)
          (("2" (case "member(rr1, route_requests)")
            (("1" (case "member(rr2, route_requests)")
              (("1" (grind) nil nil)
               ("2" (case "rr2 = route_request")
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil)
             ("2" (case "rr1 = route_request")
              (("1" (case "member(rr2, route_requests)")
                (("1" (grind) (("1" (inst 3 "rr2") nil nil)) nil)
                 ("2" (grind) nil nil))
                nil)
               ("2" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil))
 (generate_TCC2 0
  (generate_TCC2-1 nil 3708946203 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (valid_vehicle_id_set type-eq-decl nil aggregator nil)
    (route_request_message nonempty-type-eq-decl nil aggregator nil)
    (set type-eq-decl nil sets nil)
    (route_request_message_set? const-decl "bool" aggregator nil)
    (route_request_message_set type-eq-decl nil aggregator nil)
    (pred type-eq-decl nil defined_types nil)
    (valid_vehicle_id type-eq-decl nil aggregator nil)
    (route_plan_request_message nonempty-type-eq-decl nil aggregator
     nil)
    (route_plan_request_message_set? const-decl "bool" aggregator nil)
    (route_plan_request_message_set type-eq-decl nil aggregator nil)
    (rough_route_request_to_set_of_route_plan_requests type-eq-decl nil
     aggregator nil)
    (route_request_to_unique_set_of_route_plan_requests? const-decl
     "pred[rough_route_request_to_set_of_route_plan_requests(rrs)]"
     aggregator nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (defined_vehicle_id? const-decl "bool" aggregator nil)
    (all_and_only_vehicle_ids? const-decl
     "pred[route_plan_request_message_set]" aggregator nil)
    (route_request_to_set_of_route_plan_requests type-eq-decl nil
     aggregator nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (route_request_message_in_set? const-decl "bool" aggregator nil)
    (route_request_message_id_in_set? const-decl "bool" aggregator nil)
    (member const-decl "bool" sets nil)
    (member? const-decl "pred[T]" aggregator nil))
   nil))
 (generate_TCC3 0
  (generate_TCC3-1 nil 3708946203
   ("" (skeep 1 t)
    (("" (case "member(route_request, route_requests)")
      (("1"
        (case "(LAMBDA (rr: route_request_message): member(rr, route_requests) OR rr = route_request) = route_requests")
        (("1" (replace -1)
          (("1" (hide -1)
            (("1" (split)
              (("1" (expand "route_request_message_in_set?")
                (("1" (skeep -1 t)
                  (("1" (hide -1 -2)
                    (("1" (replace -5 :dir RL)
                      (("1" (hide -4 -5)
                        (("1"
                          (expand "unique_route_request_to_set_of_route_plan_requests?")
                          (("1"
                            (case "(LAMBDA(rr: (member?(new_route_requests))): IF member[route_request_message](rr, new_route_requests) THEN route_plan_requests(rr) ELSE create(rr`vehicle_ids, new_route_requests, route_plan_requests) ENDIF) = (LAMBDA(rr: (member?(new_route_requests))): route_plan_requests(rr))")
                            (("1" (replace -1)
                              (("1"
                                (hide -1)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (apply-extensionality)
                              (("1"
                                (typepred "x!1")
                                (("1" (grind) nil nil))
                                nil)
                               ("2"
                                (reveal -3)
                                (("2" (grind) nil nil))
                                nil)
                               ("3" (grind) nil nil)
                               ("4"
                                (reveal -3)
                                (("4" (grind) nil nil))
                                nil))
                              nil)
                             ("3" (reveal -2) (("3" (grind) nil nil))
                              nil)
                             ("4" (grind) nil nil)
                             ("5" (reveal -2) (("5" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (grind) nil nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but (-1 1))
          (("2" (apply-extensionality) (("2" (grind) nil nil)) nil))
          nil))
        nil)
       ("2" (split)
        (("1" (grind) nil nil)
         ("2" (grind)
          (("1" (inst -5 "rr2!1")
            (("1" (inst -5 "rr2!1")
              (("1" (inst 5 "rpr1!1" "rpr2!1") nil nil)) nil))
            nil)
           ("2"
            (typepred
             "create(route_request`vehicle_ids, route_requests, route_plan_requests)")
            (("2"
              (name-replace "new_rr"
               "create(route_request`vehicle_ids, route_requests, route_plan_requests)")
              (("2" (inst -2 "rr1!1")
                (("2" (grind)
                  (("2" (inst 2 "rpr2!1" "rpr1!1")
                    (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil)
           ("3"
            (typepred
             "create(route_request`vehicle_ids, route_requests, route_plan_requests)")
            (("3"
              (name-replace "new_rr"
               "create(route_request`vehicle_ids, route_requests, route_plan_requests)")
              (("3" (inst -2 "rr2!1") (("3" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)))

