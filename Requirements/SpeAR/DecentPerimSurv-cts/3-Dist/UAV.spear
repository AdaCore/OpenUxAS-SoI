Specification UAV

Imports:
import "../DecentPerimSurvDefs.spear"

Constants:

Inputs:
suggested_initial_direction : signT //The UAV may choose a different direction for the initial timestep, depending on the circumstances.
meet_LN : bool //True iff this UAV is co-located with it's left neighbor
meet_RN : bool
id : posIntT //a positive integer between 1 and N
N : posIntT //a positive integer
pos : positionT 

Outputs:
direction : signT
goal : positionT

State:

Macros:
//Shared border positions
S_L : positionT = real(id-1)*P_global/real(N)  
S_R : positionT = real(id)*P_global/real(N)
 
//Previous direction
pre_direction : signT = previous direction with initial value suggested_initial_direction

Assumptions:
a_id_in_range : id <= N //id > 0 is guaranteed by the posIntT type
a_N_is_fixed : true -> (N == previous N)
a_id_is_fixed : true -> (id == previous id)

Requirements:
r_dir : direction == (
			if id == 1 then //leftmost UAV
				if meet_RN then
					if pos < S_R then
						1
					else //pos >= S_R
						-1
				else if pos <= 0.0 m then
						1
					 //This case is possible if N = 1
					 else if pos >= P_global then
					 		-1 
					 	  else
					 	  	pre_direction
			else if id == N then //rightmost UAV
				if meet_LN then
					if pos > S_L then
						-1
					else //pos_UAV3 <= S_L 
						1
				else if pos >= P_global then
						-1
					else 
						pre_direction
			else //a middle UAV
				if meet_LN then
					if pos <= S_L then
						1
					else //pos_UAV2 > S_L
						-1						
				else if meet_RN then
						if pos < S_R then
							1
						else //pos >= S_R
							-1 
					 else 
						pre_direction
		)  

r_goal : goal == (
			if id == 1 then //leftmost UAV
				if meet_RN then
					if pos < S_R then
						S_R
					else //pos >= S_R 
						0.0 m
				else if direction == 1 then
						P_global
					else //direction == -1 
						0.0 m 
			else if id == N then //rightmost UAV
				if meet_LN then
					if pos > S_L then
						S_L
					else //pos <= S_L 
						P_global
				else if direction == 1 then
						P_global
					 else //direction == -1 
						0.0 m 
			else //a middle UAV
				if meet_LN then
					S_L
				else if meet_RN then
						S_R
					 else if direction == 1 then
							P_global
						  else //direction == -1 
							0.0 m 
) 

Properties:
p0 : true //Dummy property so that SpeAR will run and check predicate subtypes