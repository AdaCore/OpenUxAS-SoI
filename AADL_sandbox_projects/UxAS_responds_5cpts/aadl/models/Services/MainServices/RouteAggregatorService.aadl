package RouteAggregatorService_pkg
public
    with CMASI;
    with UXTASK;
    with IMPACT;
    with ROUTE;
    
    thread RouteAggregatorService
    	features 
    	    RouteRequest_in: in event data port route::RouteRequest.i;
    	    RouteResponse_out: out event data port route::RouteResponse.i;
    	    
    	    RoutePlanRequest_out: out event data port route::RoutePlanRequest.i;
    	    RoutePlanResponse_in: in event data port route::RoutePlanResponse.i;
	    annex agree {**
	        -- Minimum Five Components, No Errors (5 cpts, no errors)
	        -- RouteAggregator     
	        
	        -- AWF: 
            --  Should note that the initial cut of a single RoutePlanRq/Rs is the first step.
            --  Following steps will involve multiple Rq/Rs calls.
	        guarantee "(min 5 cpts, no errors) Upon recieving a RouteRequest_in
	        message, the RouteAggregatorService will respond exactly once by generating a 
	        RoutePlanRequest_out message. The creation and posting of this message will execute in exactly once in the
	        following timestep.":
	        UxAS_Node_Lib.responds_exactly_once_within(
                event(RoutePlanRequest_out), 
                event(RouteRequest_in), 
                1
            );
            
            guarantee "(min 5 cpts, no errors) Upon recieving a RoutePlanResponse_in
            message, the RouteAggregatorService will respond exactly once, on the next
            timestep, with a RouteResponse_out message.":
            UxAS_Node_Lib.responds_exactly_once_within(
                event(RouteResponse_out), 
                event(RoutePlanResponse_in), 
                1
            );
	    **};
    end RouteAggregatorService;
    
end RouteAggregatorService_pkg;
