% Prolog file generated by SADL SRL (.sreq) Plug-in, 2017-10-02 16:42:28
% Generated from SADL Requirements model with uri 'http://sadl.org/ValidatorReq.sreq', with alias 'ValReq', with corresponding SRL (.sreq) file 'ValidatorReq.sreq'

:- style_check(-atom).

rce_version('2.1.0.201709221328').

namespace('http://sadl.org/ValidatorReq.sreq').
prefix('http://sadl.org/ValidatorReq.sreq','ValReq').
prefix('http://sadl.org/test.sadl','test').
prefix('http://sadl.org/Validator.sadl','Val').

sreq(name('AutomationRequestReceived'), when(and(and(is('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest__Subscription',declaration('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest')),lt(listLength(previous('http://sadl.org/Validator.sadl#automationRequestList')),'http://sadl.org/Validator.sadl#maxListLength')),is(propertyOfSubject('http://sadl.org/Validator.sadl#denialOfService','http://sadl.org/Validator.sadl#System'),false)))).
sreq(name('AutomationRequestReceived'), then(insertLast('http://sadl.org/Validator.sadl#AutomationRequestValidatorService','http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest__Subscription',previous('http://sadl.org/Validator.sadl#automationRequestList')))).
sreq(name('AutomationRequestReceived'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('AutomationRequestReceived'), contextText('AutomationRequestValidatorService')).
sreq(name('AutomationRequestReceived'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',6,431,146)).
sreq(name('AutomationRequestReceived'), text('Requirement AutomationRequestReceived: AutomationRequestValidatorService shall insert uxas__messages__task__TaskAutomationRequest__Subscription into previous automationRequestList at end when uxas__messages__task__TaskAutomationRequest__Subscription is a uxas__messages__task__TaskAutomationRequest and length of previous automationRequestList < maxListLength and denialOfService of System is false.')).

sreq(name('AutomationRequestReceived2'), when(and(and(is('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest__Subscription',declaration('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest')),or(is(listLength('http://sadl.org/Validator.sadl#automationRequestList'),'http://sadl.org/Validator.sadl#maxListLength'),is(propertyOfSubject('http://sadl.org/Validator.sadl#denialOfService','http://sadl.org/Validator.sadl#System'),true))),not(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Busy'),or(ge('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate',10),not(is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse__Subscription','http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse')))))))).
sreq(name('AutomationRequestReceived2'), then(shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is(propertyOfSubject('http://sadl.org/Validator.sadl#errorMsg','http://sadl.org/Validator.sadl#AutomationRequestValidatorService'),'http://sadl.org/Validator.sadl#ErrorMsgTooManyRequests')))).
sreq(name('AutomationRequestReceived2'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('AutomationRequestReceived2'), contextText('AutomationRequestValidatorService')).
sreq(name('AutomationRequestReceived2'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',13,777,581)).
sreq(name('AutomationRequestReceived2'), text('Requirement AutomationRequestReceived2: AutomationRequestValidatorService shall set errorMsg of AutomationRequestValidatorService to ErrorMsgTooManyRequests when uxas__messages__task__TaskAutomationRequest__Subscription is a uxas__messages__task__TaskAutomationRequest and (length of automationRequestList = maxListLength or denialOfService of System is true) and not (previous state is Busy and (timeSinceLastTimerUpdate >= 10 or not(uxas__messages__task__UniqueAutomationResponse__Subscription is uxas__messages__task__UniqueAutomationResponse))).')).

sreq(name('ResponseReceived'), when(and(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Busy'),le(previous('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate'),10)),is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse__Subscription','http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse')))).
sreq(name('ResponseReceived'), then(and(and(and(shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#state','http://sadl.org/Validator.sadl#Idle')),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate',0))),removeByIndex('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',1,propertyOfSubject(previous('http://sadl.org/Validator.sadl#automationRequestList'),'http://sadl.org/Validator.sadl#AutomationRequestValidatorService'))),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationResponse_out',propertyOfSubject('http://sadl.org/Validator.sadl#content','http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse')))))).
sreq(name('ResponseReceived'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('ResponseReceived'), contextText('AutomationRequestValidatorService')).
sreq(name('ResponseReceived'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',23,713,1372)).
sreq(name('ResponseReceived'), text('Requirement ResponseReceived: AutomationRequestValidatorService shall set state to Idle and set timeSinceLastTimerUpdate to 0 and remove element 1 from previous automationRequestList of AutomationRequestValidatorService and set uxas__messages__task__TaskAutomationResponse_out to content of uxas__messages__task__UniqueAutomationResponse when previous state is Busy and previous timeSinceLastTimerUpdate <= 10 and uxas__messages__task__UniqueAutomationResponse__Subscription is uxas__messages__task__UniqueAutomationResponse.')).

sreq(name('Timeout'), when(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Busy'),or(ge(previous('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate'),10),not(is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse__Subscription','http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse')))))).
sreq(name('Timeout'), then(and(and(and(shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#state','http://sadl.org/Validator.sadl#Idle')),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate',0))),removeByIndex('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',1,propertyOfSubject(previous('http://sadl.org/Validator.sadl#automationRequestList'),'http://sadl.org/Validator.sadl#AutomationRequestValidatorService'))),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#errorMsg','http://sadl.org/Validator.sadl#ErrorMsgTimeout'))))).
sreq(name('Timeout'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('Timeout'), contextText('AutomationRequestValidatorService')).
sreq(name('Timeout'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',34,626,2090)).
sreq(name('Timeout'), text('Requirement Timeout: AutomationRequestValidatorService shall set state to Idle and set timeSinceLastTimerUpdate to 0 and remove element 1 from previous automationRequestList of AutomationRequestValidatorService and set errorMsg to ErrorMsgTimeout when previous state is Busy and (previous timeSinceLastTimerUpdate >= 10 or not(uxas__messages__task__UniqueAutomationResponse__Subscription is uxas__messages__task__UniqueAutomationResponse)).')).

sreq(name('PublishAutomationRequest'), when(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle'),gt(listLength('http://sadl.org/Validator.sadl#automationRequestList'),0)))).
sreq(name('PublishAutomationRequest'), where(and(is('ValReq_newid',declaration('http://sadl.org/Validator.sadl#GenID')),decomposition('ValReq_msg',type('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationRequest'),property('http://sadl.org/Validator.sadl#ResponseID',propertyOfSubject('http://sadl.org/Validator.sadl#result','ValReq_newid')))))).
sreq(name('PublishAutomationRequest'), then(and(and(shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationRequest_out','ValReq_msg')),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate',0))),shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#state','http://sadl.org/Validator.sadl#Busy'))))).
sreq(name('PublishAutomationRequest'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('PublishAutomationRequest'), contextText('AutomationRequestValidatorService')).
sreq(name('PublishAutomationRequest'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',45,485,2720)).
sreq(name('PublishAutomationRequest'), text('Requirement PublishAutomationRequest: AutomationRequestValidatorService shall set uxas__messages__task__UniqueAutomationRequest_out to msg and set timeSinceLastTimerUpdate to 0 and set state to Busy when previous state is Idle and length of automationRequestList > 0 where newid is (a GenID) and msg is (a uxas__messages__task__UniqueAutomationRequest with ResponseID (result of newid)).')).

sreq(name('PublishAutomationRequest2'), when(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle'),is(listLength('http://sadl.org/Validator.sadl#automationRequestList'),0)))).
sreq(name('PublishAutomationRequest2'), then(shallSet('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#state','http://sadl.org/Validator.sadl#Idle')))).
sreq(name('PublishAutomationRequest2'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
sreq(name('PublishAutomationRequest2'), contextText('AutomationRequestValidatorService')).
sreq(name('PublishAutomationRequest2'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',57,174,3213)).
sreq(name('PublishAutomationRequest2'), text('Requirement PublishAutomationRequest2: AutomationRequestValidatorService shall set state to Idle when previous state is Idle and length of automationRequestList = 0.')).

assertion(name('A1'), when(is(listLength('http://sadl.org/Validator.sadl#automationRequestList'),0))).
assertion(name('A1'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate','immaterial')))).
assertion(name('A1'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A1'), contextText('AutomationRequestValidatorService')).
assertion(name('A1'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',62,217,3392)).
assertion(name('A1'), text('Assertion A1: AutomationRequestValidatorService asserts that timeSinceLastTimerUpdate is immaterial when length of automationRequestList = 0.')).

assertion(name('A2'), when(not(and(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle'),gt(listLength('http://sadl.org/Validator.sadl#automationRequestList'),0))))).
assertion(name('A2'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationRequest_out','immaterial')))).
assertion(name('A2'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A2'), contextText('AutomationRequestValidatorService')).
assertion(name('A2'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',67,210,3613)).
assertion(name('A2'), text('Assertion A2: AutomationRequestValidatorService asserts that uxas__messages__task__UniqueAutomationRequest_out is immaterial when not(previous state is Idle and length of automationRequestList > 0).')).

assertion(name('A3'), when(and(is('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse__Subscription',declaration('http://sadl.org/Validator.sadl#uxas__messages__task__UniqueAutomationResponse')),or(is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle'),ge('http://sadl.org/Validator.sadl#timeSinceLastTimerUpdate',10))))).
assertion(name('A3'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationResponse_out','immaterial')))).
assertion(name('A3'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A3'), contextText('AutomationRequestValidatorService')).
assertion(name('A3'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',72,422,3828)).
assertion(name('A3'), text('Assertion A3: AutomationRequestValidatorService asserts that uxas__messages__task__TaskAutomationResponse_out is immaterial when uxas__messages__task__UniqueAutomationResponse__Subscription is a uxas__messages__task__UniqueAutomationResponse and (previous state is Idle or timeSinceLastTimerUpdate >= 10).')).

assertion(name('A4'), when(not(and(is('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest__Subscription',declaration('http://sadl.org/Validator.sadl#uxas__messages__task__TaskAutomationRequest')),or(is(listLength('http://sadl.org/Validator.sadl#automationRequestList'),'http://sadl.org/Validator.sadl#maxListLength'),is(propertyOfSubject('http://sadl.org/Validator.sadl#denialOfService','http://sadl.org/Validator.sadl#System'),true)))))).
assertion(name('A4'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#errorMsg','immaterial')))).
assertion(name('A4'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A4'), contextText('AutomationRequestValidatorService')).
assertion(name('A4'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',79,311,4254)).
assertion(name('A4'), text('Assertion A4: AutomationRequestValidatorService asserts that errorMsg is immaterial when not (uxas__messages__task__TaskAutomationRequest__Subscription is a uxas__messages__task__TaskAutomationRequest and (length of automationRequestList = maxListLength or denialOfService of System is true)).')).

assertion(name('A5'), when(or(ge(listLength(previous('http://sadl.org/Validator.sadl#automationRequestList')),'http://sadl.org/Validator.sadl#maxListLength'),is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle')))).
assertion(name('A5'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#automationRequestList','immaterial')))).
assertion(name('A5'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A5'), contextText('AutomationRequestValidatorService')).
assertion(name('A5'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',84,193,4569)).
assertion(name('A5'), text('Assertion A5: AutomationRequestValidatorService asserts that automationRequestList is immaterial when length of previous automationRequestList >= maxListLength or previous state is Idle.')).

assertion(name('A6'), when(or(is(listLength(previous('http://sadl.org/Validator.sadl#automationRequestList')),0),is(previous('http://sadl.org/Validator.sadl#state'),'http://sadl.org/Validator.sadl#Idle')))).
assertion(name('A6'), then(assertsThat('http://sadl.org/Validator.sadl#AutomationRequestValidatorService',is('http://sadl.org/Validator.sadl#automationRequestList','immaterial')))).
assertion(name('A6'), context('http://sadl.org/Validator.sadl#AutomationRequestValidatorService')).
assertion(name('A6'), contextText('AutomationRequestValidatorService')).
assertion(name('A6'), location('D:\SadlWorkspace42\Validator6-mod\Requirement_Model\ValidatorReq.sreq',88,180,4766)).
assertion(name('A6'), text('Assertion A6: AutomationRequestValidatorService asserts that automationRequestList is immaterial when length of previous automationRequestList = 0 or previous state is Idle.')).

